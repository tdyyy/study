数据库
    MySQL
        索引：
            类型：
                主键 innodb必须要，没有指定的话会自动创建一个看不见的递增主键（建议递增-增加插入效率）
                唯一
                普通
            结构：
                b+树：查找效率 
        执行计划explain：
            id:执行顺序-从大小
            select-type:查询类型（简单查询，复杂查询）
            table:表名
            type*: system->const->eq_ref->ref->range-index-All 性能高->低
            possiblekey:可能用到的索引
            key:用到的索引
            key-len:键长度 （非空占一个，varchar占两个）根据字符编码计算
            rows:条数
            extra:
                useing where：查询的列未被索引覆盖&条件中不为索引
                useing index:查询的列被索引覆盖&条件为索引
                useing where useing index:查询的列被索引覆盖&条件中不为索引
                useing filesort：文件排序-无法通过内部索引排序得出结果，需要通过外部索引的排序
        存储引擎：
            innodb：聚集索引 支持外键 文件存放于主键叶子节点 其他索引叶子节点存放主键地址 锁的最小粒度为行锁 支持事务
            myisam：非聚集索引 不支持外键 节点带有数据地址信息 锁的最小粒度为表锁 不支持事务
        函数：
        常用关键字：
            exist：外表循环 外表小的时候使用
            in: 
        事务：
            隔离级别：
                读取未提交 （脏读、不可重复读、幻读）
                读取已提交（不可重复读、幻读）
                可重复读（幻读）
                串行化
            传播机制：
                required:有事务则在当前事务下运行，没有则创建一个事物运行
                suppors:有事务则在当前事务下运行，没有则以非事务方式运行
                mandatory:必须有事务，没有则抛异常
                required_new:必须在自己的事务下运行，有事务则先挂起再开一个
                not_support:不能再事务下运行，有事务则先挂起
                never：不能在事务下运行，有事务则抛出异常
                nested：当先无事务则新开一个事物，有事务则开启一个嵌套事务
        sql优化：
            索引失效：
                非空判断: <> !=
                模糊查询通配符前置
                索引上使用函数 
                条件上带or
                条件带计算或者函数
