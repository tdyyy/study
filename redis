redis
    数据类型 string,list,set,map
    优势：
        效率：基于内存
        安全：串行读写
        适用性：分布式系统共享
    一般用途：
        热点数据
        配置数据
        分布式锁
    分布式：
        集群：
            配置：slaveof masterip masterport
            原理 把n个节点通过槽（）来划分
        主从：
            同步：slave连接master时进行全量同步 s向m发送一个同步指令m开始生成数据文件同时记录缓冲区新指令
                 数据文件生成完毕后发送给s，s同步完成后m再向s发送缓冲的指令完成第二轮同步，之后的增量同步则是每条指令发送给master执行m都会向s发送一遍
            弊端：
                扩容代价大 每个slave都保存master完整数据，扩容需要对每个节点进行扩容不具备容错能力 master宕机后需要手动重启或者切换节点集群才能恢复
                网络波动可能会导致主从全量复制io过大导致master宕机
            优点：
                读写分离
                    由master和slave分工 一般配置为master读写，slave读
                节约持久化开销
                    持久化可以由某个slave执行节省master开销
                非租塞同步
        哨兵：
            同步 同主从模式
            优点
                主从优点
                高可用性
                    节点监控 以一定间隔向集群所有节点发送
                    提供选举机制 master宕机后由哨兵选举一个新的master


    问题：
        缓存穿透 一直请求一个不存在的数据 导致每次都会绕过缓存直接读取数据库

        缓存击穿 热点数据突然失效 大量请求直接打入数据库

        缓存雪崩 大批缓存数据同时到期 大量请求直接打入数据库
        脑裂 集群模式下由于网络原因导致master节点与从节点连接断开 此时集群会重新选举出一个master，网络原因恢复时则出现两个master，会造成数据不安全
